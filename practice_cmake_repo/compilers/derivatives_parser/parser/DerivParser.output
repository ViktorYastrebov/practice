Terminals unused in grammar

   "lexer error"
   "e"
   "Pi"
   "."
   "AST Node destructor"


Грамматика

    0 $accept: math_function "End of file"

    1 unsigned_integer: "NUMBERS"

    2 double_value: "DOUBLE_LITERAL"

    3 number: unsigned_integer
    4       | double_value

    5 atomic_expr: number
    6            | "IDENTIFIER"
    7            | "CONSTANT_IDENTIFIER"
    8            | "(" expr ")"
    9            | "sin" atomic_expr
   10            | "sin" "^" atomic_expr "(" expr ")"
   11            | "cos" atomic_expr
   12            | "cos" "^" atomic_expr "(" expr ")"
   13            | "tan" atomic_expr
   14            | "tan" "^" atomic_expr "(" expr ")"

   15 power_expr: atomic_expr
   16           | power_expr "^" atomic_expr

   17 unary_expr: power_expr
   18           | "+" power_expr
   19           | "-" power_expr

   20 mul_div_expr: unary_expr
   21             | mul_div_expr "*" unary_expr
   22             | mul_div_expr "/" unary_expr

   23 add_sub_expr: mul_div_expr
   24             | add_sub_expr "+" mul_div_expr
   25             | add_sub_expr "-" mul_div_expr

   26 expr: add_sub_expr

   27 math_function: expr


Терминальные символы с правилами, в которых они появляются

"End of file" (0) 0
error (256)
"lexer error" (258)
"*" (259) 21
"/" (260) 22
"+" (261) 18 24
"-" (262) 19 25
"^" (263) 10 12 14 16
"cos" (264) 11 12
"sin" (265) 9 10
"tan" (266) 13 14
"e" (267)
"Pi" (268)
"." (269)
"(" (270) 8 10 12 14
")" (271) 8 10 12 14
"NUMBERS" (272) 1
"IDENTIFIER" (273) 6
"CONSTANT_IDENTIFIER" (274) 7
"DOUBLE_LITERAL" (275) 2
"AST Node destructor" (276)


Нетерминальные символы с правилами, в которых они появляются

$accept (22)
    налево: 0
unsigned_integer (23)
    налево: 1, направо: 3
double_value (24)
    налево: 2, направо: 4
number (25)
    налево: 3 4, направо: 5
atomic_expr (26)
    налево: 5 6 7 8 9 10 11 12 13 14, направо: 9 10 11 12 13 14 15
    16
power_expr (27)
    налево: 15 16, направо: 16 17 18 19
unary_expr (28)
    налево: 17 18 19, направо: 20 21 22
mul_div_expr (29)
    налево: 20 21 22, направо: 21 22 23 24 25
add_sub_expr (30)
    налево: 23 24 25, направо: 24 25 26
expr (31)
    налево: 26, направо: 8 10 12 14 27
math_function (32)
    налево: 27, направо: 0


состояние 0

    0 $accept: . math_function "End of file"
    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"
   15 power_expr: . atomic_expr
   16           | . power_expr "^" atomic_expr
   17 unary_expr: . power_expr
   18           | . "+" power_expr
   19           | . "-" power_expr
   20 mul_div_expr: . unary_expr
   21             | . mul_div_expr "*" unary_expr
   22             | . mul_div_expr "/" unary_expr
   23 add_sub_expr: . mul_div_expr
   24             | . add_sub_expr "+" mul_div_expr
   25             | . add_sub_expr "-" mul_div_expr
   26 expr: . add_sub_expr
   27 math_function: . expr

    "+"                    сдвиг, и переход в состояние 1
    "-"                    сдвиг, и переход в состояние 2
    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 14
    power_expr        переход в состояние 15
    unary_expr        переход в состояние 16
    mul_div_expr      переход в состояние 17
    add_sub_expr      переход в состояние 18
    expr              переход в состояние 19
    math_function     переход в состояние 20


состояние 1

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"
   15 power_expr: . atomic_expr
   16           | . power_expr "^" atomic_expr
   18 unary_expr: "+" . power_expr

    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 14
    power_expr        переход в состояние 21


состояние 2

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"
   15 power_expr: . atomic_expr
   16           | . power_expr "^" atomic_expr
   19 unary_expr: "-" . power_expr

    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 14
    power_expr        переход в состояние 22


состояние 3

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   11            | "cos" . atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   12            | "cos" . "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"

    "^"                    сдвиг, и переход в состояние 23
    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 24


состояние 4

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
    9            | "sin" . atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   10            | "sin" . "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"

    "^"                    сдвиг, и переход в состояние 25
    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 26


состояние 5

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   13            | "tan" . atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"
   14            | "tan" . "^" atomic_expr "(" expr ")"

    "^"                    сдвиг, и переход в состояние 27
    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 28


состояние 6

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    8            | "(" . expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"
   15 power_expr: . atomic_expr
   16           | . power_expr "^" atomic_expr
   17 unary_expr: . power_expr
   18           | . "+" power_expr
   19           | . "-" power_expr
   20 mul_div_expr: . unary_expr
   21             | . mul_div_expr "*" unary_expr
   22             | . mul_div_expr "/" unary_expr
   23 add_sub_expr: . mul_div_expr
   24             | . add_sub_expr "+" mul_div_expr
   25             | . add_sub_expr "-" mul_div_expr
   26 expr: . add_sub_expr

    "+"                    сдвиг, и переход в состояние 1
    "-"                    сдвиг, и переход в состояние 2
    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 14
    power_expr        переход в состояние 15
    unary_expr        переход в состояние 16
    mul_div_expr      переход в состояние 17
    add_sub_expr      переход в состояние 18
    expr              переход в состояние 29


состояние 7

    1 unsigned_integer: "NUMBERS" .

    $default  вывод с использованием правила 1 (unsigned_integer)


состояние 8

    6 atomic_expr: "IDENTIFIER" .

    $default  вывод с использованием правила 6 (atomic_expr)


состояние 9

    7 atomic_expr: "CONSTANT_IDENTIFIER" .

    $default  вывод с использованием правила 7 (atomic_expr)


состояние 10

    2 double_value: "DOUBLE_LITERAL" .

    $default  вывод с использованием правила 2 (double_value)


состояние 11

    3 number: unsigned_integer .

    $default  вывод с использованием правила 3 (number)


состояние 12

    4 number: double_value .

    $default  вывод с использованием правила 4 (number)


состояние 13

    5 atomic_expr: number .

    $default  вывод с использованием правила 5 (atomic_expr)


состояние 14

   15 power_expr: atomic_expr .

    $default  вывод с использованием правила 15 (power_expr)


состояние 15

   16 power_expr: power_expr . "^" atomic_expr
   17 unary_expr: power_expr .  ["End of file", "*", "/", "+", "-", ")"]

    "^"  сдвиг, и переход в состояние 30

    $default  вывод с использованием правила 17 (unary_expr)


состояние 16

   20 mul_div_expr: unary_expr .

    $default  вывод с использованием правила 20 (mul_div_expr)


состояние 17

   21 mul_div_expr: mul_div_expr . "*" unary_expr
   22             | mul_div_expr . "/" unary_expr
   23 add_sub_expr: mul_div_expr .  ["End of file", "+", "-", ")"]

    "*"  сдвиг, и переход в состояние 31
    "/"  сдвиг, и переход в состояние 32

    $default  вывод с использованием правила 23 (add_sub_expr)


состояние 18

   24 add_sub_expr: add_sub_expr . "+" mul_div_expr
   25             | add_sub_expr . "-" mul_div_expr
   26 expr: add_sub_expr .  ["End of file", ")"]

    "+"  сдвиг, и переход в состояние 33
    "-"  сдвиг, и переход в состояние 34

    $default  вывод с использованием правила 26 (expr)


состояние 19

   27 math_function: expr .

    $default  вывод с использованием правила 27 (math_function)


состояние 20

    0 $accept: math_function . "End of file"

    "End of file"  сдвиг, и переход в состояние 35


состояние 21

   16 power_expr: power_expr . "^" atomic_expr
   18 unary_expr: "+" power_expr .  ["End of file", "*", "/", "+", "-", ")"]

    "^"  сдвиг, и переход в состояние 30

    $default  вывод с использованием правила 18 (unary_expr)


состояние 22

   16 power_expr: power_expr . "^" atomic_expr
   19 unary_expr: "-" power_expr .  ["End of file", "*", "/", "+", "-", ")"]

    "^"  сдвиг, и переход в состояние 30

    $default  вывод с использованием правила 19 (unary_expr)


состояние 23

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   12            | "cos" "^" . atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"

    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 36


состояние 24

   11 atomic_expr: "cos" atomic_expr .

    $default  вывод с использованием правила 11 (atomic_expr)


состояние 25

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   10            | "sin" "^" . atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"

    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 37


состояние 26

    9 atomic_expr: "sin" atomic_expr .

    $default  вывод с использованием правила 9 (atomic_expr)


состояние 27

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"
   14            | "tan" "^" . atomic_expr "(" expr ")"

    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 38


состояние 28

   13 atomic_expr: "tan" atomic_expr .

    $default  вывод с использованием правила 13 (atomic_expr)


состояние 29

    8 atomic_expr: "(" expr . ")"

    ")"  сдвиг, и переход в состояние 39


состояние 30

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"
   16 power_expr: power_expr "^" . atomic_expr

    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 40


состояние 31

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"
   15 power_expr: . atomic_expr
   16           | . power_expr "^" atomic_expr
   17 unary_expr: . power_expr
   18           | . "+" power_expr
   19           | . "-" power_expr
   21 mul_div_expr: mul_div_expr "*" . unary_expr

    "+"                    сдвиг, и переход в состояние 1
    "-"                    сдвиг, и переход в состояние 2
    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 14
    power_expr        переход в состояние 15
    unary_expr        переход в состояние 41


состояние 32

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"
   15 power_expr: . atomic_expr
   16           | . power_expr "^" atomic_expr
   17 unary_expr: . power_expr
   18           | . "+" power_expr
   19           | . "-" power_expr
   22 mul_div_expr: mul_div_expr "/" . unary_expr

    "+"                    сдвиг, и переход в состояние 1
    "-"                    сдвиг, и переход в состояние 2
    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 14
    power_expr        переход в состояние 15
    unary_expr        переход в состояние 42


состояние 33

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"
   15 power_expr: . atomic_expr
   16           | . power_expr "^" atomic_expr
   17 unary_expr: . power_expr
   18           | . "+" power_expr
   19           | . "-" power_expr
   20 mul_div_expr: . unary_expr
   21             | . mul_div_expr "*" unary_expr
   22             | . mul_div_expr "/" unary_expr
   24 add_sub_expr: add_sub_expr "+" . mul_div_expr

    "+"                    сдвиг, и переход в состояние 1
    "-"                    сдвиг, и переход в состояние 2
    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 14
    power_expr        переход в состояние 15
    unary_expr        переход в состояние 16
    mul_div_expr      переход в состояние 43


состояние 34

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"
   15 power_expr: . atomic_expr
   16           | . power_expr "^" atomic_expr
   17 unary_expr: . power_expr
   18           | . "+" power_expr
   19           | . "-" power_expr
   20 mul_div_expr: . unary_expr
   21             | . mul_div_expr "*" unary_expr
   22             | . mul_div_expr "/" unary_expr
   25 add_sub_expr: add_sub_expr "-" . mul_div_expr

    "+"                    сдвиг, и переход в состояние 1
    "-"                    сдвиг, и переход в состояние 2
    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 14
    power_expr        переход в состояние 15
    unary_expr        переход в состояние 16
    mul_div_expr      переход в состояние 44


состояние 35

    0 $accept: math_function "End of file" .

    $default  accept


состояние 36

   12 atomic_expr: "cos" "^" atomic_expr . "(" expr ")"

    "("  сдвиг, и переход в состояние 45


состояние 37

   10 atomic_expr: "sin" "^" atomic_expr . "(" expr ")"

    "("  сдвиг, и переход в состояние 46


состояние 38

   14 atomic_expr: "tan" "^" atomic_expr . "(" expr ")"

    "("  сдвиг, и переход в состояние 47


состояние 39

    8 atomic_expr: "(" expr ")" .

    $default  вывод с использованием правила 8 (atomic_expr)


состояние 40

   16 power_expr: power_expr "^" atomic_expr .

    $default  вывод с использованием правила 16 (power_expr)


состояние 41

   21 mul_div_expr: mul_div_expr "*" unary_expr .

    $default  вывод с использованием правила 21 (mul_div_expr)


состояние 42

   22 mul_div_expr: mul_div_expr "/" unary_expr .

    $default  вывод с использованием правила 22 (mul_div_expr)


состояние 43

   21 mul_div_expr: mul_div_expr . "*" unary_expr
   22             | mul_div_expr . "/" unary_expr
   24 add_sub_expr: add_sub_expr "+" mul_div_expr .  ["End of file", "+", "-", ")"]

    "*"  сдвиг, и переход в состояние 31
    "/"  сдвиг, и переход в состояние 32

    $default  вывод с использованием правила 24 (add_sub_expr)


состояние 44

   21 mul_div_expr: mul_div_expr . "*" unary_expr
   22             | mul_div_expr . "/" unary_expr
   25 add_sub_expr: add_sub_expr "-" mul_div_expr .  ["End of file", "+", "-", ")"]

    "*"  сдвиг, и переход в состояние 31
    "/"  сдвиг, и переход в состояние 32

    $default  вывод с использованием правила 25 (add_sub_expr)


состояние 45

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   12            | "cos" "^" atomic_expr "(" . expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"
   15 power_expr: . atomic_expr
   16           | . power_expr "^" atomic_expr
   17 unary_expr: . power_expr
   18           | . "+" power_expr
   19           | . "-" power_expr
   20 mul_div_expr: . unary_expr
   21             | . mul_div_expr "*" unary_expr
   22             | . mul_div_expr "/" unary_expr
   23 add_sub_expr: . mul_div_expr
   24             | . add_sub_expr "+" mul_div_expr
   25             | . add_sub_expr "-" mul_div_expr
   26 expr: . add_sub_expr

    "+"                    сдвиг, и переход в состояние 1
    "-"                    сдвиг, и переход в состояние 2
    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 14
    power_expr        переход в состояние 15
    unary_expr        переход в состояние 16
    mul_div_expr      переход в состояние 17
    add_sub_expr      переход в состояние 18
    expr              переход в состояние 48


состояние 46

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   10            | "sin" "^" atomic_expr "(" . expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"
   15 power_expr: . atomic_expr
   16           | . power_expr "^" atomic_expr
   17 unary_expr: . power_expr
   18           | . "+" power_expr
   19           | . "-" power_expr
   20 mul_div_expr: . unary_expr
   21             | . mul_div_expr "*" unary_expr
   22             | . mul_div_expr "/" unary_expr
   23 add_sub_expr: . mul_div_expr
   24             | . add_sub_expr "+" mul_div_expr
   25             | . add_sub_expr "-" mul_div_expr
   26 expr: . add_sub_expr

    "+"                    сдвиг, и переход в состояние 1
    "-"                    сдвиг, и переход в состояние 2
    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 14
    power_expr        переход в состояние 15
    unary_expr        переход в состояние 16
    mul_div_expr      переход в состояние 17
    add_sub_expr      переход в состояние 18
    expr              переход в состояние 49


состояние 47

    1 unsigned_integer: . "NUMBERS"
    2 double_value: . "DOUBLE_LITERAL"
    3 number: . unsigned_integer
    4       | . double_value
    5 atomic_expr: . number
    6            | . "IDENTIFIER"
    7            | . "CONSTANT_IDENTIFIER"
    8            | . "(" expr ")"
    9            | . "sin" atomic_expr
   10            | . "sin" "^" atomic_expr "(" expr ")"
   11            | . "cos" atomic_expr
   12            | . "cos" "^" atomic_expr "(" expr ")"
   13            | . "tan" atomic_expr
   14            | . "tan" "^" atomic_expr "(" expr ")"
   14            | "tan" "^" atomic_expr "(" . expr ")"
   15 power_expr: . atomic_expr
   16           | . power_expr "^" atomic_expr
   17 unary_expr: . power_expr
   18           | . "+" power_expr
   19           | . "-" power_expr
   20 mul_div_expr: . unary_expr
   21             | . mul_div_expr "*" unary_expr
   22             | . mul_div_expr "/" unary_expr
   23 add_sub_expr: . mul_div_expr
   24             | . add_sub_expr "+" mul_div_expr
   25             | . add_sub_expr "-" mul_div_expr
   26 expr: . add_sub_expr

    "+"                    сдвиг, и переход в состояние 1
    "-"                    сдвиг, и переход в состояние 2
    "cos"                  сдвиг, и переход в состояние 3
    "sin"                  сдвиг, и переход в состояние 4
    "tan"                  сдвиг, и переход в состояние 5
    "("                    сдвиг, и переход в состояние 6
    "NUMBERS"              сдвиг, и переход в состояние 7
    "IDENTIFIER"           сдвиг, и переход в состояние 8
    "CONSTANT_IDENTIFIER"  сдвиг, и переход в состояние 9
    "DOUBLE_LITERAL"       сдвиг, и переход в состояние 10

    unsigned_integer  переход в состояние 11
    double_value      переход в состояние 12
    number            переход в состояние 13
    atomic_expr       переход в состояние 14
    power_expr        переход в состояние 15
    unary_expr        переход в состояние 16
    mul_div_expr      переход в состояние 17
    add_sub_expr      переход в состояние 18
    expr              переход в состояние 50


состояние 48

   12 atomic_expr: "cos" "^" atomic_expr "(" expr . ")"

    ")"  сдвиг, и переход в состояние 51


состояние 49

   10 atomic_expr: "sin" "^" atomic_expr "(" expr . ")"

    ")"  сдвиг, и переход в состояние 52


состояние 50

   14 atomic_expr: "tan" "^" atomic_expr "(" expr . ")"

    ")"  сдвиг, и переход в состояние 53


состояние 51

   12 atomic_expr: "cos" "^" atomic_expr "(" expr ")" .

    $default  вывод с использованием правила 12 (atomic_expr)


состояние 52

   10 atomic_expr: "sin" "^" atomic_expr "(" expr ")" .

    $default  вывод с использованием правила 10 (atomic_expr)


состояние 53

   14 atomic_expr: "tan" "^" atomic_expr "(" expr ")" .

    $default  вывод с использованием правила 14 (atomic_expr)
